plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.stringexpressioncalculator"
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    project.gradle.taskGraph.whenReady {
        connectedDebugAndroidTest {
            ignoreFailures = true
        }
    }
//    apply plugin: 'jacoco-android'
//
//    jacoco {
//        version "0.7.4.201502262128"
//        tasks.withType(Test) {
//            jacoco.includeNoLocationClasses = true
//            jacoco.excludes = ['jdk.internal.*']
//        }
//    }
//
//    jacocoAndroidUnitTestReport {
//        csv.enabled false
//        html.enabled true
//        xml.enabled true
//    }


    apply plugin: 'org.sonarqube'

    sonarqube {
        version "3.3"
    }
    sonarqube {
        properties {
            property "sonar.projectKey", "zephsie_StringExpressionCalculator"
            property "sonar.organization", "zephsie"
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.sources", "src/main/java"
            property "sonar.binaries", "build/intermediates/classes/debug"
            property "sonar.java.binaries", "build/intermediates/app_classes/debug"
            property "sonar.tests", "src/test/java, src/androidTest/java"
            property "sonar.java.test.binaries", "build/intermediates/app_classes/debug"

            def unit = fileTree(dir: project.projectDir, includes: ['**/*.exec']).files;
            def ui = fileTree(dir: project.projectDir, includes: ['**/*.ec']).files;
            unit.addAll(ui);
            def files = unit.join(", ");

            // property "sonar.jacoco.reportPaths", files
            // property "sonar.java.coveragePlugin", "jacoco"
            property "sonar.junit.reportsPath", "build/test-results/testDebugUnitTest"
            property "sonar.android.lint.report", "build/reports/lint-results.xml"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}